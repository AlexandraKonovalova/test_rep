import re

#регулярные выражения ищут только в строках! Если есть список строк, нужно их перебрать в цикле
#2 аргумента из модуля рег.выр, ищет выражение re в строке s:
re.search('re', s)
#присваивать это значение переменной бессмысленно (оно только ищет). Поэтому проверяем так:
if re.search('re', s):
    print(s)

#точка . - любой символ
#квантификаторы - сколько раз повторяется
    .а.а - чередование символ/а/симв/а
    б? - может быть или не быть, 0 или 1
    в+ - 1 или более раз  (ввввввв...)
    г* - 0 или более раз (ггггг.../ничего)
Внутри [] немного другие правила, все символы - это просто символы, кроме дефиса
Однако в выражении [-fsdfj] / [djfhs-] / [dfkj\-djf] дефис - это просто дефис
    [бвгдж] - 1 символ, совпадающий с одним из символов в скобках ("ж"/"б")
    [бвгдж]+ - по два совпадения, неважно какое ("жж", "бв", "гдж"...)
    [а-я] - все буквы, кроме ё
    [а-яА-Я] - все буквы всех регистров, кроме ё
    [a-яА-ЯёЁ.,+]
    \. \+ \? \*
    [0-9] / [\d] - все цифры
    Альтернатива:
        а|о (а или о)
        к(a|о)ров(а|ы)?     (корова, карова, коровы, каровы, коров, каров)
        ? относится к предыдущей символьной позиции (внутри круглых скобок или символ)
        [^абвгде] (значения, не входящие в перечисленные символы)

        берет на вход текст
        текстовый файл открыть в программе
        текст бьется на предложения и обрабатывает в цикле по одному
        если в предложении есть какая-то дата, то все предложение выводится на экран
        если даты нет, предложение проскакивается
